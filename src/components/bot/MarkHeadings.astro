---
export interface Props {
	prefix?: string;
}
const { prefix } = Astro.props;
---

{prefix && <meta name="vtbot-mark-heading-prefix" content={prefix} />}
<script>
	import {
		isTransitionBeforePreparationEvent,
		TRANSITION_BEFORE_PREPARATION,
	} from 'astro:transitions/client';

	const prefix =
		(document.querySelector('meta[name="vtbot-mark-heading-prefix"]') as HTMLMetaElement)
			?.content ?? '/';

	const markHeadings = (doc: Document) => {
		const main = doc.querySelector('main');
		if (main) {
			main
				.querySelectorAll('h1, h2,h3')
				.forEach(
					(e, idx) => ((e as HTMLHeadingElement).style.viewTransitionName ||= 'vtbot-hx-' + idx)
				);
		}
	};

	document.addEventListener(TRANSITION_BEFORE_PREPARATION, (e) => {
		if (!e.to.pathname.startsWith(prefix)) return;
		if (isTransitionBeforePreparationEvent(e)) {
			markHeadings(document);
			const originalLoader = e.loader;
			e.loader = async () => {
				await originalLoader();
				markHeadings(e.newDocument);
			};
		}
	});
</script>
